# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build_base:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine:
      image: ubuntu-2204:2022.07.1
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "update packages"
          command: "sudo apt-get -qq update"
      - run:
          name: "install necessary packages"
          command: "sudo apt-get -qq install gcc clang cmake vulkan-tools libvulkan-dev vulkan-validationlayers-dev spirv-tools libglm-dev libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev"
      - run:
          name: "Build Project"
          command: "cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_MAKE_PROGRAM=ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -G Ninja -S . -B cmake-build-debug"

machine:
  timezone:
    Europe/London
  environment:
    PATH: "/home/circleci/cmake-3.6.2-Linux-x86_64/bin:$PATH"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build_base-workflow:
    jobs:
      - build_base

dependencies:
  cache_directories:
    - ~/cmake-3.24.0-linux-x86_64
  override:
    - >
      if [ ! -d ~/cmake-3.24.0-linux-x86_64 ]; then
        echo "No cache - building CMake:
        cd ~ && wget --quiet https://cmake.org/files/v3.24/cmake-3.24.0-linux-x86_64.tar.gz && tar -xvf cmake-3.24.0-linux-x86_64.tar.gz
      else
        echo "Cached CMake found"
      fi